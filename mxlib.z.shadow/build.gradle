/*
 * Copyright (c) 2018-2021 Karlatemp. All rights reserved.
 * @author Karlatemp <karlatemp@vip.qq.com> <https://github.com/Karlatemp>
 *
 * MXLib/MXLib.mxlib.z.shadow/build.gradle
 *
 * Use of this source code is governed by the MIT license that can be found via the following link.
 *
 * https://github.com/Karlatemp/MxLib/blob/master/LICENSE
 */

import java.nio.file.Files

plugins {
    id 'com.jfrog.bintray' version '1.8.5'
    id("maven-publish")
}

def projects = new ArrayList<>(rootProject.subprojects)
projects.remove(project)
projects.removeIf { proj -> proj.name.contains("shadowjar") }
projects.removeIf { it.name == "mxlib.z.srx.debug" }

projects.forEach { proj ->
    proj.tasks.create("sourcesJar", Jar.class) { tsk ->
        tsk.dependsOn("classes")
        tsk.classifier = 'sources'
        tsk.from proj.sourceSets.main.allSource
    }
}

def root = rootProject

task collectJars() {
    def tasks = new ArrayList<Jar>()
    projects.forEach { proj ->
        try {
            def task = proj.tasks.getByName("jar")
            if (task instanceof Jar) {
                tasks.add(task)
            }
        } catch (Throwable ignore) {
        }
        try {
            def task = proj.tasks.getByName("sourcesJar")
            if (task instanceof Jar) {
                tasks.add(task)
            }
        } catch (Throwable ignore) {
        }
        try {
            def task = proj.tasks.getByName("shadowJar")
            if (task instanceof Jar) {
                tasks.add(task)
            }
        } catch (Throwable ignore) {
        }
    }
    dependsOn(tasks)
    //noinspection GroovyAssignabilityCheck
    doLast {
        def target = new File(rootProject.buildDir, "clibs/" + rootProject.version)
        target.mkdirs()
        tasks.forEach { Jar jarTask ->
            def tfile = jarTask.archiveFile.get().asFile
            def ttf = new File(target, tfile.name)
            ttf.delete()
            Files.copy(tfile.toPath(), ttf.toPath())
        }
    }
}

def allPublishs = new ArrayList<String>()
def zshadowProj = project

publishing {
    publications { container ->
        projects.forEach { proj ->
            def ppid = "publish_${proj.name}".replace(".", "_")
            allPublishs.add(ppid)
            register(ppid, MavenPublication.class) { publication ->
                publication.artifactId(proj.name)
                //noinspection GroovyAssignabilityCheck
                publication.from(proj.components.java)

                def sources = proj.tasks.findByName('sourcesJar')
                if (sources instanceof Jar) {
                    publication.artifact sources
                }

                publication.pom {
                    name = 'MxLib - ' + proj.name
                    description = 'MxLib - ' + proj.name
                    url = 'https://github.com/Karlatemp/MxLib'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://spdx.org/licenses/MIT.html'
                        }
                    }
                }
            }

        }
    }
}

bintray {
    publications = allPublishs

    user = project.findProperty("bintray.user") ?: System.getenv("USERNAME")
    key = project.findProperty('bintray.key') ?: System.getenv("TOKEN")

    override = true
    publish = true

    pkg {
        repo = 'misc'
        name = rootProject.name
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Karlatemp/MxLib.git'
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
}
